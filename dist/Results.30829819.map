{"version":3,"sources":["Pet.js","Results.js"],"names":["Pet","props","name","animal","breed","media","location","id","photos","photo","filter","photoOrMisssing","value","React","Component","petfinder","key","secret","Results","search","pet","find","output","searchParams","then","data","pets","Array","isArray","setState","state","map","breeds","join","contact","city","ResultsWithContext","searchContext"],"mappings":"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","file":"Results.30829819.map","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Pet extends React.Component {\r\n  render() {\r\n    const { name, animal, breed, media, location, id } = this.props;\r\n\r\n    let photos = [];\r\n\r\n    if (media && media.photos && media.photos.photo) {\r\n      photos = media.photos.photo.filter((photo) => photo[\"@size\"] === \"pn\");\r\n    }\r\n\r\n    const photoOrMisssing = photos[0] ? photos[0].value : \"http://placecorgi.com/300/300\";\r\n\r\n    return (\r\n      <Link to={`/details/${id}`} className=\"pet\">\r\n        <div className=\"image-containers\">\r\n          <img src={photoOrMisssing} alt={name} />\r\n        </div>\r\n        <div className=\"info\">\r\n          <h1>{name}</h1>\r\n          <h2>\r\n            {animal} - {breed} - {location}\r\n          </h2>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pet;\r\n","import React from \"react\";\r\nimport pf from \"petfinder-client\";\r\nimport Pet from \"./Pet\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { Consumer as SearchConsumer } from \"./SearchContext\";\r\n\r\nconst petfinder = pf({\r\n  key: process.env.API_KEY,\r\n  secret: process.env.API_SECRET,\r\n});\r\n\r\nclass Results extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pets: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.search();\r\n  }\r\n  search = () => {\r\n    petfinder.pet\r\n      .find({\r\n        output: \"full\",\r\n        location: this.props.searchParams.location,\r\n        animal: this.props.searchParams.animal,\r\n        breed: this.props.searchParams.breed,\r\n      })\r\n      .then((data) => {\r\n        let pets;\r\n\r\n        if (data.petfinder.pets && data.petfinder.pets.pet) {\r\n          if (Array.isArray(data.petfinder.pets.pet)) {\r\n            pets = data.petfinder.pets.pet;\r\n          } else {\r\n            pets = [data.petfinder.pets.pet];\r\n          }\r\n        } else {\r\n          pets = [];\r\n        }\r\n\r\n        // Since property name and variable have the same name we don't need to name property we are setting.\r\n        this.setState({ pets });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchBox search={this.search} />\r\n        {this.state.pets.map((pet) => {\r\n          let breed;\r\n\r\n          if (Array.isArray(pet.breeds.breed)) {\r\n            breed = pet.breeds.breed.join(\", \");\r\n          } else {\r\n            breed = pet.breeds.breed;\r\n          }\r\n          return (\r\n            <Pet\r\n              key={pet.id}\r\n              animal={pet.animal}\r\n              name={pet.name}\r\n              breed={breed}\r\n              media={pet.media}\r\n              location={`${pet.contact.city}, ${pet.contact.state}`}\r\n              id={pet.id}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Not using arrow funciton here so that function will show up in call stack for debugging purposes.\r\n// When you need access to a context in lifecycle methods beyond render() then your component needs to be\r\n// wrapped in this fashion so that you have access to context ino those other methods. If you only need access\r\n// to context inside the redner method then how it was done in SearchBox is enough.\r\nexport default function ResultsWithContext(props) {\r\n  return <SearchConsumer>{(searchContext) => <Results {...props} searchParams={searchContext} />}</SearchConsumer>;\r\n}\r\n"]}