# in root
npm init -y
npm i -g npx
npm i -D prettier

# Test prettier -> npx prettier App.js --write

# VS CODE plugin
# install prettier - code formatter
# in settings turn on 
#   Prettier: Require Config = true
#   Editor: Format on Save = true

npm i -D eslint eslint-config-prettier eslint-plugin-prettier
# debug eslint -> npm run lint -- --debug
# autofix with eslint -> npm run lint -- --fix

# Husky githook to stop back checkins

# VS CODE plugin
# install ESLint

# parcel for up and done
# webpack for production development (see v3 course for webpack or webpack fundamentals course)
# browserify still exists too... : )
npm install -D parcel-bundler

npm install -D babel-eslint eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react
npm install -D babel-eslint babel-core babel-preset-env babel-plugin-transform-class-properties babel-preset-react
  


# COOL BROWSER TRICKS!
# inspect element in browser becomes $0 variable
# on console -> x=$0 assigns it

# With React tools installed in firefox, selecting a tool in the React tools and then going to console:
# $r <-- represents the current react object, so doing something like this is valid:
# $r.setState({prop: "value"})


# FUTURE EXPLORE
# https://github.com/browserslist/browserslist-ga