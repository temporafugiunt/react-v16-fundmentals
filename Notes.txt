# in root
npm init -y
npm i -g npx
npm i -D prettier

# Test prettier -> npx prettier App.js --write

# VS CODE plugins
# install prettier - code formatter
# in settings turn on 
#   Prettier: Require Config = true
#   Editor: Format on Save = true
# install ESLint, TSLint
# vscode-styled-components
# tslint
# npm intellisense
# install firacode -> https://github.com/tonsky/FiraCode
#   Text Editor Font = Fira code
#   Enable font ligatures

npm i -D eslint eslint-config-prettier eslint-plugin-prettier
# debug eslint -> npm run lint -- --debug
# autofix with eslint -> npm run lint -- --fix

# parcel for up and done
# webpack for production development (see v3 course for webpack or webpack fundamentals course)
# browserify still exists too... : )
# parcel alternative is not only webpack itself, but create-react-app which also uses webpack internally.
npm install -D parcel-bundler

npm install -D babel-eslint eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react
npm install -D babel-eslint babel-core babel-preset-env babel-plugin-transform-class-properties babel-preset-react

// Newer version of jest seems to be working with babel 7 which is failing in this configuration.
npm install -D jest@23.5.0 react-test-renderer


# TESTING
# Run unit tests with jest
npx jest 
# Update any previous snapshots so snapshot tests won't failing
npx jest -u
# short hand for npm run test
npm t -- --watch


# REDUX
npm install redux redux-thunk react-redux


# SERVER SIDE RENDERING
npm install babel-cli express

# Husky githook to stop back checkins

# COOL BROWSER TRICKS!
# install react devtools && redux devtools (available for firefox and chrome)

# inspect element in browser becomes $0 variable
# on console -> x=$0 assigns it

# With React tools installed in firefox, selecting a tool in the React tools and then going to console:
# $r <-- represents the current react object, so doing something like this is valid:
# $r.setState({prop: "value"})


# FUTURE EXPLORE

# https://github.com/browserslist/browserslist-ga

# React Error Boundaries

# Need to explore enzyme with Jest in v3

# RENDER DEBUGGER HELP - Easy way to view and debug state.
render() {
    return(
        <pre>
            <code>{JSON.stringify(this.state, null, 4)}</code>
        </pre>
    )
}

